{"version":3,"sources":["actions/actionTypes.js","components/Form/Form.js","actions/actionCreators.js","components/Table/TableRow/TableRow.js","components/Table/Table.js","App.js","reducers/formReducer.js","reducers/listReducer.js","store/index.js","index.js"],"names":["ADD_SERVICE","ADD_SERVICE_CHANGES","REMOVE_SERVICE","EDIT_SERVICE","END_SERVICE_EDITING","CHANGE_SERVICE_FIELD","mapDispatchToProps","onServiceSubmit","name","price","type","payload","onChangesSubmit","index","onReset","onChange","value","connect","state","form","props","handleInputChange","target","className","onSubmit","event","preventDefault","editingMode","htmlFor","id","required","placeholder","autoComplete","min","max","onFocus","select","TableRow","handleDeleteClick","onDeleteClick","handleEditClick","onEditClick","href","onClick","onRemove","onEdit","services","list","map","service","findIndex","App","initialState","reducer","combineReducers","action","Number","nanoid","updatedState","slice","filter","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mRAAaA,EAAc,cACdC,EAAsB,sBACtBC,EAAiB,iBACjBC,EAAe,eACfC,EAAsB,sBACtBC,EAAuB,uB,WCoGpC,IAIMC,EAAsB,CAC1BC,gBCrGK,SAAoBC,EAAMC,GAC/B,MAAO,CAAEC,KAAMV,EAAaW,QAAS,CAAEH,OAAMC,WDqG7CG,gBClGK,SAA2BC,EAAOL,EAAMC,GAC7C,MAAO,CAAEC,KAAMT,EAAqBU,QAAS,CAAEE,QAAOL,OAAMC,WDkG5DK,QCvFK,WACL,MAAO,CAAEJ,KAAMN,EAAqBO,QAAS,KDuF7CI,SCpFK,SAA4BP,EAAMQ,GACvC,MAAO,CAAEN,KAAML,EAAsBM,QAAS,CAAEH,OAAMQ,YDsFzCC,eAXS,SAACC,GAAD,MAAY,CAClCC,KAAMD,EAAMC,QAU0Bb,EAAzBW,EA1Gf,SAAcG,GAAQ,IAElBD,EAKEC,EALFD,KACAZ,EAIEa,EAJFb,gBACAK,EAGEQ,EAHFR,gBACAE,EAEEM,EAFFN,QACAC,EACEK,EADFL,SAGF,SAASM,EAAT,GAAwC,IAAXC,EAAU,EAAVA,OACnBd,EAAgBc,EAAhBd,KAAMQ,EAAUM,EAAVN,MAEdD,EAASP,EAAMQ,GAGjB,OACE,uBACEO,UAAU,OACVC,SAAU,SAACC,GACTA,EAAMC,iBADa,IAEXlB,EAAgBW,EAAhBX,KAAMC,EAAUU,EAAVV,MAEd,GAAIU,EAAKQ,YAAYT,MAAO,CAAC,IACnBL,EAAUM,EAAKQ,YAAfd,MAERD,EAAgBC,EAAOL,EAAMC,GAC7BK,SAEAP,EAAgBC,EAAMC,IAI1BK,QAAS,SAACW,GACRA,EAAMC,iBAENZ,KAnBJ,UAsBE,sBAAKS,UAAU,eAAf,UACE,uBAAOK,QAAQ,OAAf,kDACA,uBACEL,UAAU,qBACVb,KAAK,OACLmB,GAAG,OACHrB,KAAK,OACLsB,UAAQ,EACRd,MAAOG,EAAKX,KACZO,SAAUM,EACVU,YAAY,4FACZC,aAAa,WAGjB,sBAAKT,UAAU,eAAf,UACE,uBAAOK,QAAQ,QAAf,0FACA,uBACEL,UAAU,sBACVb,KAAK,SACLmB,GAAG,QACHrB,KAAK,QACLyB,IAAI,IACJC,IAAI,SACJJ,UAAQ,EACRd,MAAOG,EAAKV,MACZM,SAAUM,EACVc,QAAS,qBAAGb,OAAoBc,eAGpC,uBACEb,UAAU,4BACVb,KAAK,SACLM,MAAM,2DAGNG,EAAKQ,YAAYT,OACd,uBACCK,UAAU,6BACVb,KAAK,QACLM,MAAM,2D,YErFH,SAASqB,EAASjB,GAAQ,IAErCS,EAKET,EALFS,GACArB,EAIEY,EAJFZ,KACAC,EAGEW,EAHFX,MACe6B,EAEblB,EAFFmB,cACaC,EACXpB,EADFqB,YAGF,OACE,qBAAIlB,UAAU,WAAWM,GAAIA,EAA7B,UACE,6BAAKrB,IACL,6BAAKC,IACL,+BACE,mBACEc,UAAU,yBACVmB,KAAK,KACLC,QAASH,EAHX,oBAOA,mBACEjB,UAAU,2BACVmB,KAAK,KACLC,QAASL,EAHX,0BC2CR,IAIMhC,EAAsB,CAC1BsC,SFtDK,SAAuBf,GAC5B,MAAO,CAAEnB,KAAMR,EAAgBS,QAAS,CAAEkB,QEsD1CgB,OFnDK,SAAqBrC,EAAMC,EAAOkB,GACvC,MAAO,CAAEjB,KAAMP,EAAcQ,QAAS,CAAEH,OAAMC,QAAOkB,kBEqDxCV,eATS,SAACC,GAAD,MAAY,CAClC4B,SAAU5B,EAAM6B,QAQsBzC,EAAzBW,EAlEf,SAAeG,GAAQ,IAEnB0B,EAGE1B,EAHF0B,SACAF,EAEExB,EAFFwB,SACAC,EACEzB,EADFyB,OAcF,OACE,wBAAOtB,UAAU,QAAjB,UACE,gCACE,+BACE,sEACA,8GACA,uFAGJ,gCACGuB,EAASE,KAAI,SAACC,GAAa,IAClBpB,EAAoBoB,EAApBpB,GAAIrB,EAAgByC,EAAhBzC,KAAMC,EAAUwC,EAAVxC,MAElB,OACE,cAAC,EAAD,CAEEoB,GAAIA,EACJrB,KAAMA,EACNC,MAAOA,EACP8B,cAAe,kBA9B3B,SAA2BV,GACzB,OAAOe,EAASf,GA6BeS,CAAkBT,IACvCY,YAAa,kBA3BzB,SAAyBZ,GACvB,IAAMhB,EAAQiC,EAASI,WAAU,SAACD,GAAD,OAAaA,EAAQpB,KAAOA,KADlC,EAEHiB,EAASjC,GAAzBL,EAFmB,EAEnBA,KAAMC,EAFa,EAEbA,MAEd,OAAOoC,EAAOrC,EAAMC,EAAO,CAAES,OAAO,EAAML,UAuBb2B,CAAgBX,KAL9BA,cC9BJsB,MATf,WACE,OACE,qCACE,cAAC,EAAD,IACA,cAAC,EAAD,Q,qBCDAC,EAAe,CACnB5C,KAAM,GACNC,MAAO,EACPkB,YAAa,CACXT,OAAO,EACPL,MAAO,K,mBCJLuC,EAAe,CACnB,CACEvB,GAAI,wBACJrB,KAAM,4EACNC,MAAO,MAET,CACEoB,GAAI,wBACJrB,KAAM,kFACNC,MAAO,MAET,CACEoB,GAAI,wBACJrB,KAAM,gHACNC,MAAO,KAET,CACEoB,GAAI,wBACJrB,KAAM,8FACNC,MAAO,OCtBX,IAAM4C,EAAUC,YAAgB,CAC9BnC,KFUa,WAAoD,IAA/BD,EAA8B,uDAAtBkC,EAAcG,EAAQ,uCAChE,OAAQA,EAAO7C,MACb,KAAKL,EAAL,IACUG,EAAS+C,EAAO5C,QAAhBH,KACJQ,EAAQwC,OAAOD,EAAO5C,QAAQK,QAC7BuC,EAAO5C,QAAQK,MAEpB,OAAO,2BAAKE,GAAZ,kBAAoBV,EAAOQ,IAC7B,KAAKb,EACH,OAAO,2BAAKe,GAAUqC,EAAO5C,SAC/B,KAAKP,EACH,OAAOgD,EACT,QACE,OAAOlC,IEtBX6B,KDwBa,WAAoD,IAA/B7B,EAA8B,uDAAtBkC,EAAcG,EAAQ,wDACxBA,EAAO5C,SAAvCE,EADwD,EACxDA,MAAOgB,EADiD,EACjDA,GAAIrB,EAD6C,EAC7CA,KAAMC,EADuC,EACvCA,MAEzB,OAAQ8C,EAAO7C,MACb,KAAKV,EACH,MAAM,GAAN,mBAAWkB,GAAX,CAAkB,CAAEW,GAAI4B,cAAUjD,OAAMC,MAAO+C,OAAO/C,MACxD,KAAKR,EACH,IAAMyD,EAAY,sBACbxC,EAAMyC,MAAM,EAAG9C,IADF,CAEhB,CACEgB,GAAIX,EAAML,GAAOgB,GACjBrB,KAAMA,EACNC,MAAO+C,OAAO/C,KALA,YAObS,EAAMyC,MAAM9C,EAAQ,KAEzB,OAAO6C,EACT,KAAKxD,EACH,OAAOgB,EAAM0C,QAAO,SAACX,GAAD,OAAaA,EAAQpB,KAAOA,KAClD,QACE,OAAOX,MCpCE2C,EALDC,YACZT,EACAU,OAAOC,8BAAgCD,OAAOC,gCCJhDC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUN,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJO,SAASC,eAAe,W","file":"static/js/main.acac049d.chunk.js","sourcesContent":["export const ADD_SERVICE = 'ADD_SERVICE';\nexport const ADD_SERVICE_CHANGES = 'ADD_SERVICE_CHANGES';\nexport const REMOVE_SERVICE = 'REMOVE_SERVICE';\nexport const EDIT_SERVICE = 'EDIT_SERVICE';\nexport const END_SERVICE_EDITING = 'END_SERVICE_EDITING';\nexport const CHANGE_SERVICE_FIELD = 'CHANGE_SERVICE_FIELD';\n","import './Form.css';\nimport { connect } from 'react-redux';\nimport {\n  addService,\n  addServiceChanges,\n  endServiceEditing,\n  changeServiceField\n} from '../../actions/actionCreators';\nimport PropTypes from 'prop-types';\n\nfunction Form(props) {\n  const {\n    form,\n    onServiceSubmit,\n    onChangesSubmit,\n    onReset,\n    onChange,\n  } = props;\n\n  function handleInputChange({ target }) {\n    const { name, value } = target;\n\n    onChange(name, value);\n  }\n\n  return (\n    <form\n      className=\"Form\"\n      onSubmit={(event) => {\n        event.preventDefault();\n        const { name, price } = form;\n\n        if (form.editingMode.state) {\n          const { index } = form.editingMode;\n\n          onChangesSubmit(index, name, price);\n          onReset();\n        } else {\n          onServiceSubmit(name, price);\n        }\n      }}\n\n      onReset={(event) => {\n        event.preventDefault();\n\n        onReset();\n      }}\n    >\n      <div className=\"Form-control\">\n        <label htmlFor=\"name\">Услуга</label>\n        <input\n          className=\"Form-control__name\"\n          type=\"text\"\n          id=\"name\"\n          name=\"name\"\n          required\n          value={form.name}\n          onChange={handleInputChange}\n          placeholder=\"Например: Замена...\"\n          autoComplete=\"off\"\n        />\n      </div>\n      <div className=\"Form-control\">\n        <label htmlFor=\"price\">Стоимость (руб.)</label>\n        <input\n          className=\"Form-control__price\"\n          type=\"number\"\n          id=\"price\"\n          name=\"price\"\n          min=\"1\"\n          max=\"999999\"\n          required\n          value={form.price}\n          onChange={handleInputChange}\n          onFocus={({ target }) => target.select()}\n        />\n      </div>\n      <input\n        className=\"Form-control__button-save\"\n        type=\"submit\"\n        value=\"Сохранить\"\n      />\n      {\n        form.editingMode.state\n        && <input\n            className=\"Form-control__button-reset\"\n            type=\"reset\"\n            value=\"Отменить\"\n          />\n      }\n    </form>\n  );\n}\n\nForm.propTypes = {\n  form: PropTypes.shape({\n    name: PropTypes.string,\n    price: PropTypes.number,\n  }).isRequired,\n  onServiceSubmit: PropTypes.func.isRequired,\n  onChangesSubmit: PropTypes.func.isRequired,\n  onReset: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired,\n}\n\nconst mapStateToProps = (state) => ({\n  form: state.form,\n});\n\nconst mapDispatchToProps = ({\n  onServiceSubmit: addService,\n  onChangesSubmit: addServiceChanges,\n  onReset: endServiceEditing,\n  onChange: changeServiceField,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);\n","import {\n  ADD_SERVICE,\n  ADD_SERVICE_CHANGES,\n  REMOVE_SERVICE,\n  EDIT_SERVICE,\n  END_SERVICE_EDITING,\n  CHANGE_SERVICE_FIELD,\n} from './actionTypes';\n\nexport function addService(name, price) {\n  return { type: ADD_SERVICE, payload: { name, price } };\n}\n\nexport function addServiceChanges(index, name, price) {\n  return { type: ADD_SERVICE_CHANGES, payload: { index, name, price } };\n}\n\nexport function removeService(id) {\n  return { type: REMOVE_SERVICE, payload: { id } };\n}\n\nexport function editService(name, price, editingMode) {\n  return { type: EDIT_SERVICE, payload: { name, price, editingMode } };\n}\n\nexport function endServiceEditing() {\n  return { type: END_SERVICE_EDITING, payload: {} };\n}\n\nexport function changeServiceField(name, value) {\n  return { type: CHANGE_SERVICE_FIELD, payload: { name, value } };\n}\n","import './TableRow.css';\n\nexport default function TableRow(props) {\n  const {\n    id,\n    name,\n    price,\n    onDeleteClick: handleDeleteClick,\n    onEditClick: handleEditClick,\n  } = props;\n\n  return (\n    <tr className=\"TableRow\" id={id}>\n      <td>{name}</td>\n      <td>{price}</td>\n      <td>\n        <a\n          className=\"TableRow-control__edit\"\n          href=\"#0\"\n          onClick={handleEditClick}\n        >\n          &#9998;\n        </a>\n        <a\n          className=\"TableRow-control__delete\"\n          href=\"#0\"\n          onClick={handleDeleteClick}\n        >\n          &#10008;\n        </a>\n      </td>\n    </tr>\n  );\n}\n","import './Table.css';\nimport TableRow from './TableRow/TableRow';\nimport { connect } from 'react-redux';\nimport {\n  removeService,\n  editService\n} from '../../actions/actionCreators';\nimport PropTypes from 'prop-types';\n\nfunction Table(props) {\n  const {\n    services,\n    onRemove,\n    onEdit,\n  } = props;\n\n  function handleDeleteClick(id) {\n    return onRemove(id);\n  }\n\n  function handleEditClick(id) {\n    const index = services.findIndex((service) => service.id === id);\n    const { name, price } = services[index];\n\n    return onEdit(name, price, { state: true, index });\n  }\n\n  return (\n    <table className=\"Table\">\n      <thead>\n        <tr>\n          <th>Услуга</th>\n          <th>Стоимость (руб.)</th>\n          <th>Действия</th>\n        </tr>\n      </thead>\n      <tbody>\n        {services.map((service) => {\n          const { id, name, price } = service;\n\n          return (\n            <TableRow\n              key={id}\n              id={id}\n              name={name}\n              price={price}\n              onDeleteClick={() => handleDeleteClick(id)}\n              onEditClick={() => handleEditClick(id)}\n            />\n          );\n        })}\n      </tbody>\n    </table>\n  );\n}\n\nTable.propTypes = {\n  services: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string,\n    name: PropTypes.string,\n    price: PropTypes.number,\n  })).isRequired,\n  onRemove: PropTypes.func.isRequired,\n  onEdit: PropTypes.func.isRequired,\n}\n\nconst mapStateToProps = (state) => ({\n  services: state.list,\n});\n\nconst mapDispatchToProps = ({\n  onRemove: removeService,\n  onEdit: editService\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Table);\n","import Form from './components/Form/Form';\nimport Table from './components/Table/Table';\n\nfunction App() {\n  return (\n    <>\n      <Form />\n      <Table />\n    </>\n  );\n}\n\nexport default App;\n","import {\n  CHANGE_SERVICE_FIELD,\n  EDIT_SERVICE,\n  END_SERVICE_EDITING,\n} from '../actions/actionTypes';\n\nconst initialState = {\n  name: '',\n  price: 0,\n  editingMode: {\n    state: false,\n    index: '',\n  }\n};\n\nexport default function formReducer(state = initialState, action) {\n  switch (action.type) {\n    case CHANGE_SERVICE_FIELD:\n      const { name } = action.payload;\n      let value = Number(action.payload.value)\n        || action.payload.value;\n\n      return { ...state, [name]: value };\n    case EDIT_SERVICE:\n      return { ...state, ...action.payload };\n    case END_SERVICE_EDITING:\n      return initialState;\n    default:\n      return state;\n  }\n}\n","import { nanoid } from 'nanoid';\nimport {\n  ADD_SERVICE,\n  ADD_SERVICE_CHANGES,\n  REMOVE_SERVICE,\n} from '../actions/actionTypes';\n\nconst initialState = [\n  {\n    id: '76OOH7xQPaqkVY6WJhpJ5',\n    name: 'Замена стекла',\n    price: 21000,\n  },\n  {\n    id: 'Vmii-9M7fj9C6LpjSx1Eh',\n    name: 'Замена дисплея',\n    price: 25000,\n  },\n  {\n    id: 'WJ0HT1M9kA-IeAcSq6Quu',\n    name: 'Замена аккумулятора',\n    price: 4000,\n  },\n  {\n    id: 'G5RdV1pOqHALXLT8hY1Oa',\n    name: 'Замена микрофона',\n    price: 2500,\n  },\n];\n\nexport default function listReducer(state = initialState, action) {\n  const { index, id, name, price } = { ...action.payload };\n\n  switch (action.type) {\n    case ADD_SERVICE:\n      return [...state, { id: nanoid(), name, price: Number(price) }];\n    case ADD_SERVICE_CHANGES:\n      const updatedState = [\n        ...state.slice(0, index),\n        {\n          id: state[index].id,\n          name: name,\n          price: Number(price),\n        },\n        ...state.slice(index + 1),\n      ];\n      return updatedState;\n    case REMOVE_SERVICE:\n      return state.filter((service) => service.id !== id);\n    default:\n      return state;\n  }\n}\n","import { createStore, combineReducers } from \"redux\";\nimport formReducer from '../reducers/formReducer';\nimport listReducer from '../reducers/listReducer';\n\nconst reducer = combineReducers({\n  form: formReducer,\n  list: listReducer,\n});\n\nconst store = createStore(\n  reducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\n);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}